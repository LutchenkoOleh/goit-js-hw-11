{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport SimpleLightbox from \"simplelightbox\";\n\n\nconst form = document.querySelector('.form');\nconst searchBtn = document.querySelector('.btn')\nconst input = document.querySelector('.input')\nconst container = document.querySelector('.gallery')\n\n\nfunction searchImg(query) {\n\n  const API_KEY = '44806225-40e07737f22f709bd193bb0f7';\n  const URL = `https://pixabay.com/api/?key=${API_KEY}`;\n  const imageType = 'photo';\n  const orientation = 'horizontal';\n  const safeSearch = true;\n\n  return fetch(`${URL}&q=${query}%image_type=${imageType}&orientation=${orientation}&safesearch=${safeSearch}`)\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error('no match item')\n      }\n      return res.json()\n    })\n\n}\n\nform.addEventListener(\"submit\", handelSearch);\n\nfunction handelSearch(e) {\n  e.preventDefault();\n\n  const formTarget = e.currentTarget;\n  const queryValue = formTarget.elements.query.value.toLowerCase();\n  if (queryValue.length <= 0) {\n    iziToast.show({\n      backgroundColor: '#ef4040',\n      messageColor: '#fff',\n      messageSize: '16px',\n      position: 'topRight',\n      message: 'Please write something in the search field'\n    })\n  }\n\n  searchImg(queryValue)\n    .then(renderImg)\n    .catch(onFetchError)\n\n}\n\nfunction onFetchError(error) {\n  iziToast.error({\n    backgroundColor: '#ef4040',\n    messageColor: '#fff',\n    messageSize: '16px',\n    position: 'topRight',\n    message: 'Sorry, there are no images matching your search query. Please try again!'\n  })\n}\n\nfunction renderImg({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) {\n  searchImg()\n    .then(data => console.log(data.hits))\n    .catch(err => console.error(err))\n\n  const markup = `\n  <li class=\"item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n   <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"img-class\">\n   <p class=\"img-text\">Likes:${likes}</p>\n   <p class=\"img-text\">Views:${views}</p>\n   <p class=\"img-text\">Comments:${comments}</p>\n   <p class=\"img-text\">Downloads:${downloads}</p>\n  </li>`\n\n  container.innerHTML = markup;\n}\n\n// function createMarkup(hits) {\n//   return hits.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n//     `\n//   <li class=\"item\">\n//   <a class=\"gallery-link\" href=\"${largeImageURL}\">\n//    <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"img-class\">\n//    <p class=\"img-text\">Likes:${likes}</p>\n//    <p class=\"img-text\">Views:${views}</p>\n//    <p class=\"img-text\">Comments:${comments}</p>\n//    <p class=\"img-text\">Downloads:${downloads}</p>\n//   </li>`).join(\"\")\n// }\n\n\n\n\n// searchBtn.addEventListener('submit', handlerFormSubmit)\n\n// form.addEventListener('submit', handlerFormSubmit)\n\n// function handlerFormSubmit(e) {\n//   e.preventDefault();\n\n//   const formTarget = e.currentTarget;\n//   const queryValue = formTarget.elements.query.value.toLowerCase();\n\n\n\n//   const API_KEY = '44806225-40e07737f22f709bd193bb0f7';\n//   const URL = `https://pixabay.com/api/?key=${API_KEY}`;\n//   const q = queryValue;\n//   const imageType = 'photo';\n//   const orientation = 'horizontal';\n//   const safeSearch = true;\n\n//   const apiUrl = `${URL}&q=${q}%image_type=${imageType}&orientation=${orientation}&safesearch=${safeSearch}`;\n\n\n//   function getObject(query) {\n//     return fetch(apiUrl)\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(res.status)\n//         }\n\n//         return res.json\n//       })\n//   }\n\n//   getObject(queryValue)\n//     .then(data => {\n//       if (data = []) {\n//         iziToast.error({\n//           backgroundColor: '#ef4040',\n//           messageColor: '#fff',\n//           messageSize: '16px',\n//           position: 'topRight',\n//           message: 'Sorry, there are no images matching your search query. Please try again!'\n//         })\n//       } else {\n//         console.log(data.hits);\n//       }\n//     })\n//     .catch(err => console.error(err))\n// }"],"names":["form","container","searchImg","query","res","handelSearch","e","queryValue","iziToast","renderImg","onFetchError","error","webformatURL","largeImageURL","tags","likes","views","comments","downloads","data","err","markup"],"mappings":"svBAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACzB,SAAS,cAAc,MAAM,EACjC,SAAS,cAAc,QAAQ,EAC7C,MAAMC,EAAY,SAAS,cAAc,UAAU,EAGnD,SAASC,EAAUC,EAAO,CAQxB,OAAO,MAAM,qEAAYA,CAAK,uDAFX,EAEuF,EAAE,EACzG,KAAMC,GAAQ,CACb,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAM,eAAe,EAEjC,OAAOA,EAAI,KAAM,CACvB,CAAK,CAEL,CAEAJ,EAAK,iBAAiB,SAAUK,CAAY,EAE5C,SAASA,EAAaC,EAAG,CACvBA,EAAE,eAAc,EAGhB,MAAMC,EADaD,EAAE,cACS,SAAS,MAAM,MAAM,cAC/CC,EAAW,QAAU,GACvBC,EAAS,KAAK,CACZ,gBAAiB,UACjB,aAAc,OACd,YAAa,OACb,SAAU,WACV,QAAS,4CACf,CAAK,EAGHN,EAAUK,CAAU,EACjB,KAAKE,CAAS,EACd,MAAMC,CAAY,CAEvB,CAEA,SAASA,EAAaC,EAAO,CAC3BH,EAAS,MAAM,CACb,gBAAiB,UACjB,aAAc,OACd,YAAa,OACb,SAAU,WACV,QAAS,0EACb,CAAG,CACH,CAEA,SAASC,EAAU,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,GAAa,CAC3FhB,EAAW,EACR,KAAKiB,GAAQ,QAAQ,IAAIA,EAAK,IAAI,CAAC,EACnC,MAAMC,GAAO,QAAQ,MAAMA,CAAG,CAAC,EAElC,MAAMC,EAAS;AAAA;AAAA,kCAEiBR,CAAa;AAAA,eAChCD,CAAY,UAAUE,CAAI;AAAA,+BACVC,CAAK;AAAA,+BACLC,CAAK;AAAA,kCACFC,CAAQ;AAAA,mCACPC,CAAS;AAAA,SAG1CjB,EAAU,UAAYoB,CACxB"}